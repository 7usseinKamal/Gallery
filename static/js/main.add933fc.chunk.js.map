{"version":3,"sources":["components/UI/Loading/LoadingSpinner.module.css","components/Insert/Insert.module.css","store/gallery-context.js","components/UI/Loading/LoadingSpinner.js","components/Gallery/Gallery.js","components/UI/Modal/Backdrop.js","components/UI/Modal/ModalOverlay.js","components/UI/Modal/Modal.js","components/Insert/Insert.js","App.js","store/GalleryProvider.js","index.js","components/Gallery/Gallery.module.css","components/UI/Modal/Backdrop.module.css","components/UI/Modal/ModalOverlay.module.css"],"names":["module","exports","GalleryContext","React","createContext","images","singleImg","modal","currentImage","fetchImagesHandler","a","getImageHandler","id","closeModalHandler","nextImgHandler","backImgHandler","LoadingSpinner","className","classes","spinner","Gallery","image","ctx","useContext","container","overlay","uuid","onClick","bind","src","url","alt","name","Backdrop","props","numberOverTotalImages","num","length","backdrop","onClose","type","onBack","onNext","ModalOverlay","img","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","children","Insert","useEffect","putData","map","App","GalleryProvider","useState","setImages","setSingleImg","setModal","slideRef","useRef","fetch","response","json","data","galleryContext","current","findIndex","e","console","log","target","Provider","value","createRoot","render"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,kC,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,4B,gICCxBC,EAAiBC,IAAMC,cAAc,CACzCC,OAAQ,GACRC,UAAW,GACXC,OAAO,EACPC,aAAc,EACdC,mBAAmB,WAAD,4BAAE,sBAAAC,EAAA,0FAAF,kDAAC,GACnBC,gBAAiB,SAACC,KAClBC,kBAAmB,aACnBC,eAAgB,aAChBC,eAAgB,eAGHb,I,wBCNAc,EAJQ,WACrB,OAAO,qBAAKC,UAAWC,IAAQC,W,uBCkBlBC,EAjBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAMC,qBAAWrB,GAEvB,OACE,sBAAKe,UAAWC,IAAQM,UAAxB,UACE,qBACEP,UAAWC,IAAQO,QACnBb,GAAIS,EAAMK,KACVC,QAASL,EAAIX,gBAAgBiB,KAAK,KAAMP,EAAMK,MAHhD,SAKE,cAAC,IAAD,MAEF,qBAAKG,IAAKR,EAAMS,IAAKC,IAAKV,EAAMW,W,gCCEvBC,EAhBE,SAACC,GAChB,IAAIC,EAAqB,gBAAYD,EAAME,IAAlB,YAAyBF,EAAMG,QAExD,OACE,sBAAKpB,UAAWC,IAAQoB,SAAUX,QAASO,EAAMK,QAAS3B,GAAG,WAA7D,UACE,wBAAQ4B,KAAK,SAASb,QAASO,EAAMO,OAArC,SACE,cAAC,IAAD,MAEF,qBAAKxB,UAAWC,IAAQmB,OAAxB,SAAiCF,IACjC,wBAAQK,KAAK,SAASb,QAASO,EAAMQ,OAArC,SACE,cAAC,IAAD,U,gBCDOC,EAXM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtB,OACE,qBAAK3B,UAAWC,IAAQX,MAAxB,SACE,sBAAKU,UAAWC,IAAQ2B,QAAxB,UACE,qBAAKhB,IAAKe,EAAId,IAAKC,IAAKa,EAAIZ,OAC5B,6BAAKY,EAAIZ,aCAXc,EAAgBC,SAASC,eAAe,YAyB/BC,EAvBD,SAACf,GACb,IAAMZ,EAAMC,qBAAWrB,GAEvB,OACE,eAAC,WAAD,WACGgD,IAASC,aACR,cAAC,EAAD,CACEZ,QAASL,EAAMK,QACfH,IAAKd,EAAId,aACT6B,OAAQf,EAAIjB,OAAOgC,OACnBK,OAAQpB,EAAIR,eACZ2B,OAAQnB,EAAIP,iBAEd+B,GAEDI,IAASC,aACR,cAAC,EAAD,CAAcP,IAAKV,EAAMb,MAAzB,SAAiCa,EAAMkB,WACvCN,O,iBCUOO,EA5BA,WACb,IAAM/B,EAAMC,qBAAWrB,GAEvBoD,qBAAU,WACRhC,EAAIb,uBAEH,IAGH,IAAI8C,EAAU,cAAC,EAAD,IASd,OANIjC,EAAIjB,OAAOgC,SACbkB,EAAUjC,EAAIjB,OAAOmD,KAAI,SAACnC,GACxB,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAnBA,EAAMK,UAK7B,sBAAKT,UAAWC,IAAQM,UAAxB,UACG+B,EACAjC,EAAIf,OACH,cAAC,EAAD,CAAOc,MAAOC,EAAIhB,UAAWiC,QAASjB,EAAIT,wBCnBnC4C,EARH,WACV,OACE,cAAC,WAAD,UACE,cAAC,EAAD,O,OCHOC,EAAkB,SAACxB,GAE9B,MAA4ByB,mBAAS,IAArC,mBAAOtD,EAAP,KAAeuD,EAAf,KAEA,EAAkCD,mBAAS,IAA3C,mBAAOrD,EAAP,KAAkBuD,EAAlB,KAEA,EAA0BF,oBAAS,GAAnC,mBAAOpD,EAAP,KAAcuD,EAAd,KAEMC,EAAWC,iBAAO,GAGlBvD,EAAkB,uCAAG,8BAAAC,EAAA,sEACFuD,MACrB,wFAFuB,cACnBC,EADmB,gBAcNA,EAASC,OAdH,OAcnBC,EAdmB,OAezBR,EAAUQ,GAfe,2CAAH,qDA4DlBC,EAAiB,CACrBhE,OAAQA,EACRC,YACAC,QAEAC,aAAcuD,EAASO,QAAU,EACjC7D,qBACAE,gBAhDsB,SAACC,GACvBkD,GAAS,GACTC,EAASO,QAAUjE,EAAOkE,WAAU,SAAClD,GAAD,OAAWA,EAAMK,OAASd,KAC9DiD,EAAaxD,EAAO0D,EAASO,WA8C7BzD,kBAhBwB,SAAC2D,GACzBC,QAAQC,IAAIF,EAAEG,QAEM,aAAhBH,EAAEG,OAAO/D,IACXkD,GAAS,IAaXhD,eA3CqB,WAKjBiD,EAASO,QAAUjE,EAAOgC,OAAS,EACrC0B,EAASO,QAAU,EAEnBP,EAASO,UAGXT,EAAaxD,EAAO0D,EAASO,WAiC7BvD,eA7BqB,WACjBgD,EAASO,QAAU,EACrBP,EAASO,QAAUjE,EAAOgC,OAAS,EAEnC0B,EAASO,UAGXT,EAAaxD,EAAO0D,EAASO,YAyB/B,OACE,cAAC,EAAeM,SAAhB,CAAyBC,MAAOR,EAAhC,SACGnC,EAAMkB,YCnFAF,IAAS4B,WAAW/B,SAASC,eAAe,SACpD+B,OACH,cAAC,EAAD,UACE,cAAC,EAAD,Q,kBCRJ/E,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,2B,kBCAnED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,kBCAjED,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,4BAA4B,QAAU,iC","file":"static/js/main.add933fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3lNNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Insert_container__2szlw\"};","import React from \"react\";\r\n\r\nconst GalleryContext = React.createContext({\r\n  images: [],\r\n  singleImg: {},\r\n  modal: false,\r\n  currentImage: 0,\r\n  fetchImagesHandler: async () => {},\r\n  getImageHandler: (id) => {},\r\n  closeModalHandler: () => {},\r\n  nextImgHandler: () => {},\r\n  backImgHandler: () => {},\r\n});\r\n\r\nexport default GalleryContext;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useContext } from \"react\";\r\nimport { MdZoomOutMap } from \"react-icons/md\";\r\nimport GalleryContext from \"../../store/gallery-context\";\r\n\r\nimport classes from \"./Gallery.module.css\";\r\n\r\nconst Gallery = ({ image }) => {\r\n  const ctx = useContext(GalleryContext);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div\r\n        className={classes.overlay}\r\n        id={image.uuid}\r\n        onClick={ctx.getImageHandler.bind(null, image.uuid)}\r\n      >\r\n        <MdZoomOutMap />\r\n      </div>\r\n      <img src={image.url} alt={image.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import { MdArrowForwardIos, MdArrowBackIos } from \"react-icons/md\";\r\n\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  let numberOverTotalImages = `Image ${props.num}/${props.length}`;\r\n\r\n  return (\r\n    <div className={classes.backdrop} onClick={props.onClose} id=\"backdrop\">\r\n      <button type=\"button\" onClick={props.onBack}>\r\n        <MdArrowBackIos />\r\n      </button>\r\n      <div className={classes.length}>{numberOverTotalImages}</div>\r\n      <button type=\"button\" onClick={props.onNext}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import classes from \"./ModalOverlay.module.css\";\r\n\r\nconst ModalOverlay = ({ img }) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>\r\n        <img src={img.url} alt={img.name} />\r\n        <h3>{img.name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import { Fragment, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GalleryContext from \"../../../store/gallery-context\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport ModalOverlay from \"./ModalOverlay\";\r\n\r\n// get root element\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  const ctx = useContext(GalleryContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop\r\n          onClose={props.onClose}\r\n          num={ctx.currentImage}\r\n          length={ctx.images.length}\r\n          onNext={ctx.nextImgHandler}\r\n          onBack={ctx.backImgHandler}\r\n        />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay img={props.image}>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport GalleryContext from \"../../store/gallery-context\";\r\nimport LoadingSpinner from \"../UI/Loading/LoadingSpinner\";\r\nimport Gallery from \"../Gallery/Gallery\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\n\r\nimport classes from \"./Insert.module.css\";\r\n\r\nconst Insert = () => {\r\n  const ctx = useContext(GalleryContext);\r\n\r\n  useEffect(() => {\r\n    ctx.fetchImagesHandler();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // loading when data not fetching from API\r\n  let putData = <LoadingSpinner />;\r\n\r\n  // check if we get data override putData variable\r\n  if (ctx.images.length) {\r\n    putData = ctx.images.map((image) => {\r\n      return <Gallery key={image.uuid} image={image} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {putData}\r\n      {ctx.modal && (\r\n        <Modal image={ctx.singleImg} onClose={ctx.closeModalHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insert;\r\n","import { Fragment } from \"react\";\nimport Insert from \"./components/Insert/Insert\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Insert />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React, { useState, useRef } from \"react\";\r\nimport GalleryContext from \"./gallery-context\";\r\n\r\nexport const GalleryProvider = (props) => {\r\n  // images data that we fetch from API\r\n  const [images, setImages] = useState([]);\r\n  // one images by getting it when click\r\n  const [singleImg, setSingleImg] = useState({});\r\n  // modal state to control show or hide modal\r\n  const [modal, setModal] = useState(false);\r\n  // ref to control slide number\r\n  const slideRef = useRef(0);\r\n\r\n  // fetch images from API function\r\n  const fetchImagesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://scaleflex.cloudimg.io/v7/0.fe_task_static/pictures.json?vh=7a646d&func=proxy\"\r\n    );\r\n\r\n    /* \r\n    -- if we work in real project we will write this lines of code if fetch failed to show error message\r\n    and not only this we will need some code \r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Fetch Failed\");\r\n    } \r\n    */\r\n\r\n    const data = await response.json();\r\n    setImages(data);\r\n  };\r\n\r\n  // to show modal and get gallery object on click the image\r\n  const getImageHandler = (id) => {\r\n    setModal(true);\r\n    slideRef.current = images.findIndex((image) => image.uuid === id);\r\n    setSingleImg(images[slideRef.current]);\r\n  };\r\n\r\n  // next slide\r\n  const nextImgHandler = () => {\r\n    /*\r\n      why (-2) because if we click next or previous button will get to us... \r\n      previous image index the was aleady show\r\n    */\r\n    if (slideRef.current > images.length - 2) {\r\n      slideRef.current = 0;\r\n    } else {\r\n      slideRef.current++;\r\n    }\r\n\r\n    setSingleImg(images[slideRef.current]);\r\n  };\r\n\r\n  // back slide\r\n  const backImgHandler = () => {\r\n    if (slideRef.current < 1) {\r\n      slideRef.current = images.length - 1;\r\n    } else {\r\n      slideRef.current--;\r\n    }\r\n\r\n    setSingleImg(images[slideRef.current]);\r\n  };\r\n\r\n  // close modal\r\n  const closeModalHandler = (e) => {\r\n    console.log(e.target);\r\n    // check if we hit the backdrop itself not next & previous buttons\r\n    if (e.target.id === \"backdrop\") {\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  const galleryContext = {\r\n    images: images,\r\n    singleImg,\r\n    modal,\r\n    // number of slide of cuurent image\r\n    currentImage: slideRef.current + 1,\r\n    fetchImagesHandler,\r\n    getImageHandler,\r\n    closeModalHandler,\r\n    nextImgHandler,\r\n    backImgHandler,\r\n  };\r\n\r\n  return (\r\n    <GalleryContext.Provider value={galleryContext}>\r\n      {props.children}\r\n    </GalleryContext.Provider>\r\n  );\r\n};\r\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { GalleryProvider } from \"./store/GalleryProvider\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <GalleryProvider>\n    <App />\n  </GalleryProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Gallery_container__27Rjp\",\"overlay\":\"Gallery_overlay__2gOr8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__2OD9q\",\"length\":\"Backdrop_length__1Dggc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalOverlay_modal__3joJ3\",\"popup\":\"ModalOverlay_popup__1Z5lR\",\"content\":\"ModalOverlay_content__2I6oV\"};"],"sourceRoot":""}